<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        ZWFU0zRz9EUKiFKrNtdpxY6n/9k=
</value>
  </data>
</root>